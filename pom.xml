<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.meta64</groupId>
	<artifactId>com.meta64.mobile</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Meta64 Mobile</name>
	<description>meta64 - Social Engine for the Web</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>com.meta64.mobile.AppServer</start-class>
		<java.version>1.8</java.version>
		<oakVersion>1.6.1</oakVersion>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mobile</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-twitter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>

		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		
		<!--
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
		-->
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.0</version>
		</dependency>

<!--
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<optional>true</optional>
		</dependency>
		
		<dependency>
    		<groupId>org.apache.derby</groupId>
    		<artifactId>derby</artifactId>
		</dependency>
		
		<dependency>
    		<groupId>org.apache.tomcat</groupId>
    		<artifactId>tomcat-jdbc</artifactId>
		</dependency>
-->
		
		<!-- Use Log4J for logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		
		<!--
		For info about this and what it's for and why it's commented out, look in file JavaToTypeScriptCodeGen.java
		
		<dependency>
		 	<groupId>cz.habarta.typescript-generator</groupId>
        	<artifactId>typescript-generator-core</artifactId>
        	<version>1.10-SNAPSHOT</version>
		</dependency>
		-->
		
		<dependency>
    		<groupId>org.apache.solr</groupId>
    		<artifactId>solr-solrj</artifactId>
    		<version>6.2.0</version>
		</dependency>
		
		<dependency>
			<groupId>net.java.dev.rome</groupId>
			<artifactId>rome</artifactId>
			<version>1.0.0</version>
		</dependency>
		
		<!-- 
		I decided to go with a PURE HTML file option first, before supporting any PDF export option, so for now no pdf
		export is available, and this it the way images are embedded in the HMTL
		https://en.wikipedia.org/wiki/Data_URI_scheme
		<dependency>
    		<groupId>org.apache.pdfbox</groupId>
    		<artifactId>pdfbox-app</artifactId>
    		<version>2.0.7</version>
		</dependency>
		-->
		
	</dependencies>

	<build>
		
			<plugins>
			
				<plugin>
    				<groupId>org.apache.maven.plugins</groupId>
    				<artifactId>maven-javadoc-plugin</artifactId>
    				<version>2.10.4</version>
    				<configuration>
        				<noqualifier>all</noqualifier>
        				<reportOutputDirectory>
            				./apidocs
        				</reportOutputDirectory>
        				<destDir>apidocs</destDir>
   	 				</configuration>
				</plugin>
			
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				
				<!-- 
				WARNING: It appears that only ONE exec-maven-plugin runs. Having two of these plugins won't work, because it ends up 
				only running one of them. Don't know why. So just put ALL scripting stuff in this one file
				-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<configuration>
						<executable>./build/run-pom-exec.sh</executable>
						<workingDirectory>./build</workingDirectory>
					</configuration>
				</plugin>
				
				<!--
				According to habarta documentation and examples the below should work... but it does not,
				so instead of generating TypeScript, using this plugin I'm currently using my JavaToTypeScriptCodeGen.java
				implementation which directly executes the Habarta core generator code.
				
				http://www.habarta.cz/typescript-generator/maven/typescript-generator-maven-plugin/plugin-info.html
				maven goal: typescript-generator:generate
				
				<plugin>
					<groupId>cz.habarta.typescript-generator</groupId>
					<artifactId>typescript-generator-maven-plugin</artifactId>
					<version>1.10-SNAPSHOT</version>
					<executions>
						<execution>
							<id>generate</id>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<jsonLibrary>jackson2</jsonLibrary>
								<classes>
									<class>com.meta64.mobile.request.AddPrivilegeRequest</class>
								</classes>
								<outputFile>/home/clay/testout/test-pomgen.ts</outputFile>
								<outputKind>global</outputKind>
								<namespace>Rest</namespace>
							</configuration>
						</execution>
					</executions>
				</plugin>
				-->
				
			</plugins>
		
	</build>
		
</project>
