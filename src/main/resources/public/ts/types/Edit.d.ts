import * as I from "./Interfaces";
import { EditNodeDlg } from "./EditNodeDlg";
export declare class Edit {
    postConstruct(_f: any): void;
    importTargetNode: any;
    createNode: () => void;
    openChangePasswordDlg: () => void;
    openManageAccountDlg: () => void;
    editPreferences: () => void;
    renameNode: () => void;
    openImportDlg: () => void;
    openExportDlg: () => void;
    private insertBookResponse;
    private deleteNodesResponse;
    private initNodeEditResponse;
    private moveNodesResponse;
    private setNodePositionResponse;
    showReadOnlyProperties: boolean;
    nodesToMove: any;
    nodesToMoveSet: Object;
    parentOfNewNode: I.NodeInfo;
    editingUnsavedNode: boolean;
    sendNotificationPendingSave: boolean;
    editNode: I.NodeInfo;
    editNodeDlgInst: EditNodeDlg;
    nodeInsertTarget: any;
    isEditAllowed: (node: any) => boolean;
    isInsertAllowed: (node: any) => boolean;
    startEditingNewNode: (typeName?: string, createAtTop?: boolean) => void;
    startEditingNewNodeWithName: () => void;
    insertNodeResponse: (res: I.InsertNodeResponse) => void;
    createSubNodeResponse: (res: I.CreateSubNodeResponse) => void;
    saveNodeResponse: (res: I.SaveNodeResponse, payload: any) => void;
    editMode: (modeVal?: boolean) => void;
    moveNodeUp: (uid?: string) => void;
    moveNodeDown: (uid?: string) => void;
    moveNodeToTop: (uid?: string) => void;
    moveNodeToBottom: (uid?: string) => void;
    getNodeAbove: (node: any) => any;
    getNodeBelow: (node: any) => I.NodeInfo;
    getFirstChildNode: () => any;
    runEditNode: (uid: any) => void;
    insertNode: (uid?: any, typeName?: string) => void;
    createSubNode: (uid?: any, typeName?: string, createAtTop?: boolean) => void;
    replyToComment: (uid: any) => void;
    clearSelections: () => void;
    deleteSelNodes: () => void;
    getBestPostDeleteSelNode: () => I.NodeInfo;
    cutSelNodes: () => void;
    private loadNodesToMoveSet;
    pasteSelNodes: () => void;
    insertBookWarAndPeace: () => void;
}
